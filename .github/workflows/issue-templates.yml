name: Issue Templates

on:
  issues:
    types: [opened]
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write

jobs:
  apply-issue-templates:
    runs-on: ubuntu-latest
    steps:
      - name: Apply issue templates
        uses: actions/github-script@v7
        with:
          script: |
            // Handle both manual trigger and issue events
            let issue;
            if (context.payload.issue) {
              // Triggered by issue event
              issue = context.payload.issue;
            } else {
              // Manual trigger - get the latest issue
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                sort: 'created',
                direction: 'desc',
                per_page: 1
              });
              issue = issues.data[0];
            }
            
            if (!issue) {
              console.log('No issue found to process');
              return;
            }
            
            const title = issue.title.toLowerCase();
            const body = issue.body.toLowerCase();
            
            // Auto-assign labels based on content
            const labels = [];
            
            if (title.includes('bug') || body.includes('bug') || body.includes('error')) {
              labels.push('bug');
            }
            if (title.includes('feature') || body.includes('feature') || body.includes('enhancement')) {
              labels.push('enhancement');
            }
            if (title.includes('urgent') || body.includes('urgent') || body.includes('critical')) {
              labels.push('urgent');
            }
            if (title.includes('mobile') || body.includes('mobile')) {
              labels.push('mobile');
            }
            if (title.includes('dashboard') || body.includes('dashboard')) {
              labels.push('dashboard');
            }
            if (title.includes('data') || body.includes('data')) {
              labels.push('data-quality');
            }
            if (title.includes('collection') || body.includes('collection')) {
              labels.push('data-collection');
            }
            
            // Add priority labels
            if (title.includes('high') || body.includes('high priority')) {
              labels.push('high-priority');
            } else if (title.includes('medium') || body.includes('medium priority')) {
              labels.push('medium-priority');
            } else if (title.includes('low') || body.includes('low priority')) {
              labels.push('low-priority');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
              console.log(`Applied labels: ${labels.join(', ')}`);
            }
            
            // Add issue to project board
            try {
              // Get the project ID for "Toginnsikt - Train Delay Analytics"
              const projects = await github.rest.projects.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              
              const project = projects.data.find(p => p.name === "Toginnsikt - Train Delay Analytics");
              
              if (project) {
                // Add issue to project
                await github.rest.projects.createCard({
                  project_id: project.id,
                  content_id: issue.id,
                  content_type: 'Issue'
                });
                console.log(`Added issue #${issue.number} to project: ${project.name}`);
              } else {
                console.log('Project "Toginnsikt - Train Delay Analytics" not found');
              }
            } catch (error) {
              console.log(`Error adding to project: ${error.message}`);
            }
